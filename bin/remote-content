#!/bin/sh

if [ $# -eq 0 ]; then
	set -- -h
fi

OPTS_SPEC="\
remote-content register <module_name> <remote_url> <branch>
remote-content pull <module_name> <branch>
--

h,help 	show the help
"
eval "$(echo "$OPTS_SPEC" | git rev-parse --parseopt -- "$@" || echo exit $?)"


# Setup the enviroment
PATH=$PATH:$(git --exec-path)

. git-sh-setup

# only work when we have subtree installed
if [ "$(hash git-subtree &>/dev/null && echo OK)" = "" ]
then
	die "To manage remote content we need git-subtree; install git subtree (google is your best friend) or upgrade git to >=1.7.11"
fi

LOCAL_PATH="content/modules/"
MODULE_NAME=
REMOTE_NAME=
REMOTE_URL=
REMOTE_BRANCH=

remote_content_main()
{
	# parse out the options first
	while [ $# -gt 0 ]; do
		opt="$1"
		shift

		case "$opt" in
			--) break ;;
			*) die "Unexpected option: $opt" ;;
		esac
	done

	COMMAND="$1"
	shift

	case "$COMMAND" in
		register)
			# make sure we have the name for the module, the repo url and the branch
			if [ $# -lt 1 ]; then die "To register remote content you need to name the remote module"; fi
			if [ $# -lt 2 ]; then die "To register remote content the url to the remote to pull from is required"; fi
			
			MODULE_NAME="$1"
			REMOTE_URL="$2"
			
			shift 2

			cmd_register ;;

		pull)
			if [ $# -lt 1 ]; then die "Specify the module you wish the pull updates for"; fi
			if [ $# -lt 2 ]; then die "Specify the branch on the remote which to pull from"; fi

			MODULE_NAME="$1"
			REMOTE_BRANCH="$2"

			shift 2
			
			cmd_pull ;;

		*) die "Unknown command" ;;
	esac

}

say() {
	echo "$@" >&2
}

cmd_register() {
	say "Registering content module '${MODULE_NAME}'"

	REMOTE_NAME="content/${MODULE_NAME}"
	MODULE_PATH="${LOCAL_PATH}${MODULE_NAME}"

	# check for reasons why this registering could fail
	if [ -e "$MODULE_PATH" ]; then
		say "Module name is already taken (path exists), try a different name"
	fi

	if git remote | grep "^${REMOTE_NAME}$" > /dev/null; then
		die "Module name is already taken (remote exists), try a different name"
	fi
	
	if git remote add "${REMOTE_NAME}" "${REMOTE_URL}"; then
		say "Registered the content module '${MODULE_NAME}'"
	else
		die "Couldn't register the content module '${MODULE_NAME}'"
	fi
}

cmd_pull() {
	say "Pulling updates for module '${MODULE_NAME}'"

	REMOTE_NAME="content/${MODULE_NAME}"
	MODULE_PATH="${LOCAL_PATH}${MODULE_NAME}"

	if [ ! -e "$MODULE_PATH" ]; then
		COMMAND="add"
	else
		COMMAND="pull"
	fi

	if git subtree $COMMAND --prefix="$MODULE_PATH" $REMOTE $REMOTE_BRANCH --message="Pulled latest from content module '${MODULE_NAME}'"; then
		[ $command = "pull" ] && say "Pulled the latest changes for '${MODULE_NAME}"
		[ $command = "add" ] &&  say "Added and pulled the latest changes for '${MODULE_NAME}"
	else
		die "Could not pull the latest changes"
	fi
}

remote_content_main "$@"